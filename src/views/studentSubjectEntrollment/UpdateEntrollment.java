/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views.studentSubjectEntrollment;

import includes.MysqlConnection;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author kavindu
 */
public class UpdateEntrollment extends javax.swing.JDialog {

    private HashMap<String, String> studentsHashMap = new HashMap<>();
    private HashMap<String, String> subjectsHashMap = new HashMap<>();

    private int entrollId;

    private Runnable successAction;

    public UpdateEntrollment(java.awt.Frame parent, boolean modal, int entrollId, Runnable successAction) {
        super(parent, modal);
        initComponents();
        this.entrollId = entrollId;
        this.successAction = successAction;
        loadStudentsComboBoxData();
        loadSubjectsComboBoxData();
        fillFields();
    }

    private void loadStudentsComboBoxData() {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `students` ");
            Vector vector = new Vector();
            vector.add("Select");
            while (resultSet.next()) {
                studentsHashMap.put(resultSet.getString("name"), resultSet.getString("id"));
                vector.add(resultSet.getString("name"));
            }
            DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel(vector);
            studentsComboBox.setModel(comboBoxModel);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadSubjectsComboBoxData() {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `subjects`");
            Vector vector = new Vector();
            vector.add("Select");
            while (resultSet.next()) {
                subjectsHashMap.put(resultSet.getString("name"), resultSet.getString("id"));
                vector.add(resultSet.getString("name"));
            }
            DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel(vector);
            subjectComboBox.setModel(comboBoxModel);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillFields() {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `student_subject_entrollments` WHERE `id`='" + entrollId + "' ");
            if (resultSet.next()) {
                ResultSet studentsResultSet = MysqlConnection.executeSearch("SELECT * FROM `students` WHERE `id`='" + resultSet.getString("student_id") + "' ");
                if (studentsResultSet.next()) {
                    studentsComboBox.setSelectedItem(studentsResultSet.getString("name"));
                }
                ResultSet subjectResultSet = MysqlConnection.executeSearch("SELECT * FROM `subjects` WHERE `id`='" + resultSet.getString("subject_id") + "' ");
                if (subjectResultSet.next()) {
                    subjectComboBox.setSelectedItem(subjectResultSet.getString("name"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        subjectComboBox = new javax.swing.JComboBox<>();
        studentsComboBox = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("update entrollment");
        setResizable(false);

        jLabel1.setText("Student");

        jLabel2.setText("Subject");

        subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        updateButton.setText("update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentsComboBox, 0, 148, Short.MAX_VALUE)
                            .addComponent(subjectComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(updateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String studentString = String.valueOf(studentsComboBox.getSelectedItem());
        String subjectString = String.valueOf(subjectComboBox.getSelectedItem());

        if (studentString.equals("Select") && subjectString.equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please select a student or a subject");
        } else {
            int studentId = Integer.parseInt(studentsHashMap.get(studentString));
            int subjectId = Integer.parseInt(subjectsHashMap.get(subjectString));
            try {
                ResultSet checkResultSet = MysqlConnection.executeSearch("SELECT * FROM `student_subject_entrollments` WHERE `student_id`='" + studentId + "' AND `subject_id`='" + subjectId + "' ");
                if (!checkResultSet.next()) {
                    MysqlConnection.executeIUD("INSERT INTO `student_subject_entrollments`(`student_id`, `subject_id`) VALUES ('" + studentId + "', '" + subjectId + "') ");
                    successAction.run();
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Already Registered !");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
            }
        }

    }//GEN-LAST:event_updateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> studentsComboBox;
    private javax.swing.JComboBox<String> subjectComboBox;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views.payments;

import includes.MysqlConnection;
import java.io.File;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kavindu
 */
public class PaymentPanel extends javax.swing.JPanel {

    private PaymentPanel paymentPanel = this;

    /**
     * Creates new form PaymentPanel
     */
    public PaymentPanel() {
        initComponents();
        dateLabel.setText(getTodayDate());
        loadTableData();
    }

    public static String getTodayDate() {
        Date date = new Date();
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
        return dateformat.format(date);
    }

    private void registerDate() {
        try {
            String todayDate = getTodayDate();
            ResultSet checkDateResultSet = MysqlConnection.executeSearch("SELECT * FROM `dates` WHERE `date`='" + todayDate + "' ");
            if (!checkDateResultSet.next()) {
                MysqlConnection.executeIUD("INSERT INTO `dates`(`date`) VALUES ('" + todayDate + "') ");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadTableData() {
        registerDate();
        try {
            String todayDate = getTodayDate();
            ResultSet paymentResultSet = MysqlConnection.executeSearch("SELECT * FROM `payments` INNER JOIN `dates` ON `payments`.`dates_id`=`dates`.`id` INNER JOIN `students` ON `payments`.`student_id`=`students`.`id` INNER JOIN `subjects` ON `payments`.`subject_id`=`subjects`.`id` WHERE `dates`.`date`='" + todayDate + "' ");

            DefaultTableModel tableModel = (DefaultTableModel) paymentsTable.getModel();
            tableModel.setRowCount(0);
            while (paymentResultSet.next()) {
                Vector vector = new Vector();
                vector.add(paymentResultSet.getString("id"));
                vector.add(paymentResultSet.getString("subjects.name"));
                vector.add(paymentResultSet.getString("students.name"));
                vector.add(paymentResultSet.getString("value"));

                tableModel.addRow(vector);

            }
            paymentsTable.setModel(tableModel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void storeData(String studentId, String subjectId, Double value) {
        try {
            registerDate();
            String todayDate = getTodayDate();
            ResultSet checkResultSet = MysqlConnection.executeSearch("SELECT * FROM `payments` INNER JOIN `dates` ON `payments`.`dates_id`=`dates`.`id` WHERE `student_id`='" + studentId + "' AND `subject_id`='" + subjectId + "' AND `date`='" + todayDate + "' AND `value`='" + value + "' ");

            if (!checkResultSet.next()) {

                ResultSet dateResultSet = MysqlConnection.executeSearch("SELECT * FROM `dates` WHERE `date`='" + todayDate + "' ");
                if (dateResultSet.next()) {
                    MysqlConnection.executeIUD("INSERT INTO `payments`(`student_id`, `subject_id`, `value`, `dates_id`) VALUES ('" + studentId + "', '" + subjectId + "', '" + value + "', '" + dateResultSet.getString("id") + "') ");
                    JOptionPane.showMessageDialog(this, "Created!");
                    loadTableData();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        paymentsTable = new javax.swing.JTable();
        dateLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        paymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "subject", "student", "value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymentsTable);

        dateLabel.setText("date");

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setText("add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("payments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateLabel)
                        .addGap(43, 43, 43)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateLabel)
                        .addComponent(jButton1))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new CreatePaymentDialog(null, true, paymentPanel).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void paymentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentsTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int row = paymentsTable.getSelectedRow();

            if (row > -1) {
                String subjectString = String.valueOf(paymentsTable.getValueAt(row, 1));
                String studentString = String.valueOf(paymentsTable.getValueAt(row, 2));
                String valueString = String.valueOf(paymentsTable.getValueAt(row, 3));
                try {
                    InputStream s = this.getClass().getResourceAsStream("/resources/adayapana_payment_invoice.jasper");
                    HashMap<String, Object> params = new HashMap<>();
                    params.put("DateParam", dateLabel.getText());
                    params.put("NameParam", studentString);
                    params.put("SubjectParam", subjectString);
                    params.put("ValueParam", valueString);
                    params.put("TotalParam", valueString);

                    JREmptyDataSource dataSource = new JREmptyDataSource();
                    JasperPrint report = JasperFillManager.fillReport(s, params, dataSource);

                    JasperViewer.viewReport(report, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_paymentsTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable paymentsTable;
    // End of variables declaration//GEN-END:variables
}

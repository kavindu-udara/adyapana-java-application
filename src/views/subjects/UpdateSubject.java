/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views.subjects;

import includes.MysqlConnection;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

/**
 *
 * @author kavindu
 */
public class UpdateSubject extends javax.swing.JDialog {

    private Runnable reloadTableAction;
    private int subo;

    /**
     * Creates new form UpdateSubject
     */
    public UpdateSubject(java.awt.Frame parent, boolean modal, int subo, Runnable reloadTableAction) {
        super(parent, modal);
        initComponents();
        this.reloadTableAction = reloadTableAction;
        this.subo = subo;
        fillFields();
    }

    private void fillFields() {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `subjects` WHERE `id`='" + subo + "' ");
            if (resultSet.next()) {
                nameField.setText(resultSet.getString("name"));
                descriptionField.setText(resultSet.getString("description"));
                priceField.setText(resultSet.getString("price"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("update subject");
        setResizable(false);

        jLabel1.setText("description");

        jLabel2.setText("price");

        updateButton.setBackground(new java.awt.Color(255, 204, 204));
        updateButton.setText("Update");
        updateButton.setOpaque(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 204, 204));
        deleteButton.setText("Delete");
        deleteButton.setOpaque(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(priceField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(descriptionField)
                            .addComponent(nameField))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:

        String description = descriptionField.getText();
        String price = priceField.getText();
        String name = nameField.getText();

        if (description.isEmpty() || price.isEmpty() || name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "all field are required");
            return;
        }

        try {
            Double priceDouble = Double.parseDouble(price);
            MysqlConnection.executeIUD("UPDATE `subjects` SET `description`='" + description + "', `price`='" + priceDouble + "', `name`='" + name + "' WHERE `id`='"+subo+"' ");
            JOptionPane.showMessageDialog(this, "account updated");
            reloadTableAction.run();
            dispose();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "account update failed : " + e.getMessage());
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:

        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure ?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                // delete from entrollment
                MysqlConnection.executeIUD("DELETE FROM `student_subject_entrollments` WHERE `subject_id`='" + subo + "' ");

                ResultSet classesResultSet = MysqlConnection.executeSearch("SELECT * FROM `classes` WHERE `subject_id`='" + subo + "' ");
                while (classesResultSet.next()) {
                    MysqlConnection.executeIUD("DELETE FROM `attendance` WHERE `class_id`='" + classesResultSet.getString("id") + "' ");
                }

                // delete from payments
                MysqlConnection.executeIUD("DELETE FROM `classes` WHERE `subject_id`='" + subo + "' ");

                // delete from payments
                MysqlConnection.executeIUD("DELETE FROM `payments` WHERE `subject_id`='" + subo + "' ");

                // delete from payments
                MysqlConnection.executeIUD("DELETE FROM `invoices` WHERE `subject_id`='" + subo + "' ");

                // delete from teacher_has_subject
                MysqlConnection.executeIUD("DELETE FROM `teacher_has_subject` WHERE `subject_id`='" + subo + "' ");

            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField priceField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views.teachers;

import includes.MysqlConnection;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kavindu
 */
public class TeacherSubjects extends javax.swing.JDialog {

    private TeacherSubjects teacherSubjects = this;

    /**
     * Creates new form TeacherSubjects
     */
    public TeacherSubjects(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void updateTeacherDetails(int teacherId) {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `teachers` WHERE `id`='" + teacherId + "' ");
            if (resultSet.next()) {
                teacherNameValue.setText(resultSet.getString("name"));
                teacherIdValue.setText(resultSet.getString("id"));
                loadSubjectsTableData(teacherId);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadSubjectsTableData(int teacherId) {
        try {
            ResultSet resultSet = MysqlConnection.executeSearch("SELECT * FROM `teacher_has_subject` WHERE `teacher_id`='" + teacherId + "' ");
            DefaultTableModel tableModel = (DefaultTableModel) subjectsTable.getModel();
            tableModel.setRowCount(0);
            while (resultSet.next()) {

                Vector vector = new Vector();
                ResultSet subjectResultSet = MysqlConnection.executeSearch("SELECT * FROM `subjects` WHERE `id`='" + resultSet.getInt("subject_id") + "' ");
                if (subjectResultSet.next()) {
                    vector.add(subjectResultSet.getString("id"));
                    vector.add(subjectResultSet.getString("name"));
                }
                tableModel.addRow(vector);
            }
            subjectsTable.setModel(tableModel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void addSubject(int subjectId) {
        try {
            String teacherIdString = teacherIdValue.getText();
            if (!teacherIdString.equals("teacher id")) {
                ResultSet checkResultSet = MysqlConnection.executeSearch("SELECT * FROM `teacher_has_subject` WHERE `teacher_id`='" + teacherIdString + "' AND `subject_id`='" + subjectId + "' ");
                if (checkResultSet.next()) {
                    JOptionPane.showMessageDialog(this, "Subject is already added");
                } else {
                    MysqlConnection.executeIUD("INSERT INTO `teacher_has_subject`(`teacher_id`, `subject_id`) VALUES ('" + teacherIdString + "', '" + subjectId + "') ");
                    JOptionPane.showMessageDialog(this, "Subject is added");
                    loadSubjectsTableData(Integer.valueOf(teacherIdString));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        teacherIdValue = new javax.swing.JLabel();
        teacherNameValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add teacher subjects");
        setResizable(false);

        jLabel1.setText("Teacher Id");

        jLabel2.setText("Teacher name");

        subjectsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subjectsTable);

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setText("select teacher");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setText("add subject");
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        teacherIdValue.setText("teacher id");

        teacherNameValue.setText("name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(teacherNameValue)
                            .addComponent(teacherIdValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(teacherIdValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(teacherNameValue)))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new TeacherSelector(null, true, teacherSubjects).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String idValue = teacherIdValue.getText();
        String nameValue = teacherNameValue.getText();

        if (idValue.equals("teacher id") || nameValue.equals("teacher name")) {
            JOptionPane.showMessageDialog(this, "Please select a teacher first");
            return;
        }

        new SubjectSelector(null, true, teacherSubjects).setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TeacherSubjects dialog = new TeacherSubjects(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable subjectsTable;
    private javax.swing.JLabel teacherIdValue;
    private javax.swing.JLabel teacherNameValue;
    // End of variables declaration//GEN-END:variables
}
